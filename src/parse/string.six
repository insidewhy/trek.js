import ParseConstantChar from './char'

class StoresString {
  constructor() {
    this.stores = String
  }

  parse(stream) {
    var first = stream.idx
    if (this.skip(stream))
      return stream.from(first)

    stream.idx = first
    return null
  }
}

class ParseConstant {
  constructor(value) {
    this.stores = String
    this.value = value
    this.isConstant = true
  }

  skip(stream) {
    if (stream.length >= this.value.length &&
      stream.substr(stream.idx, this.value.length) === this.value)
    {
      stream.idx += this.value.length
      return true
    }
    else
      return false
  }

  parse(stream) {
    return this.skip(stream) ?  this.value : null
  }
}

export StoresString, ParseConstant

// If obj is a string then return a constant parser, else return the
// parser unchanged.
export function makeParser(obj) {
  if (typeof obj !== 'string')
    return obj

  return obj.length === 1 ?
    new ParseConstantChar(obj) : new ParseConstant(obj)
}
