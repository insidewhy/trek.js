module _ = 'underscore'

import stream from './parse/stream'
import {sequence, lexeme, Tuple} from './parse/sequence'
import {Node, node, member} from './parse/node'
import {range, notChar, char, Char} from './parse/char'
import {plus, plusLex, star, starLex, join,
        joinLex, joinPlus, joinPlusLex} from './parse/repetition'
import {or, Variant} from './parse/or'
import {test, not} from './parse/predicate'

//////////////////////////////////////////////////////////////////////////////
// re-export stuff
export stream,
       sequence, lexeme, Tuple,
       Node, node, member,
       range, notChar, char, Char,
       plus, plusLex, star, starLex, join, joinLex, joinPlus, joinPlusLex,
       or, Variant,
       test, not

// Flags for parsers
//    constant = true        -> what parser skips is always the same
//    stores   = char/String -> only for char/String storing parsers

////////////////////////////////////////////////////////////////////////////
// base parse classes
//////////////////////////////////////////////////////////////////////////////
// Parse classes

export var parse = (spacing, grammar, src) =>
  stream(spacing).parse(grammar, src)
