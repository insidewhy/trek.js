import {expect, p, parse, parsePartial, word} from "./helper"

describe("sequence", () => {
  it("skips 2 string parsers to return a pair.", () => {
    var grammar = p.sequence(word, word),
        ast     = parse(grammar, "mr hammer")

    expect(grammar.stores).to.equal(p.Tuple)
    expect(grammar.tupleSize).to.equal(2)
    expect(ast).to.eql(["mr", "hammer"])
  })

  it("sequence(string, sequence(string, string)) stores 3-tuple.", () => {
    var grammar = p.sequence(word, p.sequence(word, word)),
        ast     = parse(grammar, "we love totoro")

    expect(grammar.stores).to.equal(p.Tuple)
    expect(grammar.tupleSize).to.equal(3)
    expect(ast).to.eql(["we", "love", "totoro"])
  })

  it("sequence(null, string) stores string.", () => {
    var grammar = p.sequence("var", word),
        ast     = parse(grammar, "var kitten")

    expect(grammar.stores).to.equal(String)
    expect(ast).to.eql("kitten")
  })
})
